
[General]
# Baseline, non-executable, abstract configuration containing the calibrated values.

network = SatCom
output-scalar-file = ${resultdir}/${configname}/${iterationvarsf}R${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvarsf}R${repetition}.vec

SatCom.communicationSlotDuration = 80 ms

# As explained in Section 3.1 of the documentation, we split
#  the 2 * terminalCount global RNGs in the following way: 
#
SatCom.groundStation.packetGenerator[*].rng-0 = 2 * ancestorIndex(0)
SatCom.terminal[*].rng-0 = 2 * ancestorIndex(0) + 1
# i.e.,
# *.groundStation.packetGenerator[0].rng-0 = 0
# *.terminal[0].rng-0 = 1
# *.groundStation.packetGenerator[1].rng-0 = 2
# *.terminal[1].rng-0 = 3
# ...
# *.groundStation.packetGenerator[terminalCount - 1].rng-0 = 2 * terminalCount - 2
# *.terminal[terminalCount - 1].rng-0 = 2 * terminalCount - 1

# The distribution of the coding rates can be one of the following:
# - "uniform"
# - "binomial"
# - "normal"
SatCom.terminal[*].codingRateDistribution = "uniform"

SatCom.groundStation.packetGenerator[*].minPacketSize = 20 byte
SatCom.groundStation.packetGenerator[*].maxPacketSize = 80 byte
SatCom.groundStation.packetGenerator[*].meanPacketInterarrivalTime = 40 ms



[Debug]
extends = General

sim-time-limit = 8000 s
num-rngs = 2 * ${terminalCount}
repeat = 30

# Enables the recording of the statistics marked with ? in the NED files
#**.result-recording-modes = all

SatCom.terminalCount = ${terminalCount = 2}
SatCom.terminal[*].codingRateDistribution = "uniform"
SatCom.groundStation.packetScheduler.blocksPerFrame = 1
SatCom.groundStation.packetGenerator[*].minPacketSize = 1 byte
SatCom.groundStation.packetGenerator[*].maxPacketSize = 1 byte
SatCom.groundStation.packetGenerator[*].meanPacketInterarrivalTime = 1 ms



[WarmUpTimeCalibration]
extends = General

sim-time-limit = 80 s
num-rngs = 2 * ${terminalCount}
repeat = 10

SatCom.terminalCount = ${terminalCount = 20}
SatCom.groundStation.packetScheduler.blocksPerFrame = 4



[DataAnalysis]
extends = General

sim-time-limit = 800 s
warmup-period = 10 s
num-rngs = 2 * ${N}
repeat = 30
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/N=${N}/M=${M}/${iterationvarsf}R${repetition}.sca
output-vector-file = ${resultdir}/${configname}/N=${N}/M=${M}/${iterationvarsf}R${repetition}.vec

SatCom.terminalCount = ${N = 10, 20, 25, 30, 35, 50}
SatCom.groundStation.packetScheduler.blocksPerFrame = ${M = ($N)*0.2..($N)*1.8 step ($N)*0.4}
SatCom.terminal[*].codingRateDistribution = ${CR = "uniform", "binomial", "normal"}
